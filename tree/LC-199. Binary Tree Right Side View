// BFS traverse start from right to left, get 1st node (the most right) value for each level
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        
        if (root == null) return res;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        
        while(!q.isEmpty()) {
            int size = q.size();
            
            for (int i = 0; i < size; i++) {
                TreeNode node = q.poll();
                
                if (i == 0) res.add(node.val); // get 1st node (the most right) value for each level
                
                if (node.right != null) q.add(node.right);
                if (node.left != null) q.add(node.left);
            }
        }
        
        return res;
    }
}