class Solution {
    public String minWindow(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        Map<Character, Integer> window = new HashMap<>();
        
        int start = -1;
        int end = -1;
        int min = Integer.MAX_VALUE;
        
        for(char c: t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        
        int need = map.size();
        int cur = 0;
        int left = 0;
        int right = 0;
        
        while(right < s.length()) {
            char ch = s.charAt(right);
            right++;
            
            if(map.containsKey(ch)) {
                window.put(ch, window.getOrDefault(ch, 0) + 1);
                
                if(window.get(ch).equals(map.get(ch))) {
                    cur++;
                }
            }
            
            while(cur == need) {
                if (right - left < min) {
                    start = left;
                    end = right;
                    min = right - left;
                }
                
                char c = s.charAt(left);
                
                if(window.containsKey(c)) {
                    if(window.get(c).equals(map.get(c))) {
                        cur--;
                    }
                    window.put(c, window.get(c) - 1);
                }
                left++;
            }
        }
        
        return start == -1 ? "" : s.substring(start, end);
    }
}